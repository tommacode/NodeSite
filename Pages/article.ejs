<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= Title %></title>
    <!--Meta Tags-->
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:domain" content="tomblake.me" />
    <meta
      name="twitter:title"
      property="og:title"
      itemprop="name"
      content="<%= Title %>"
    />
    <meta
      name="twitter:description"
      property="og:description"
      itemprop="description"
      content="<%= Appetizer %>"
    />
    <%- include('Partials/head.html') %>
  </head>
  <body>
    <div>
      <nav><%- include('Partials/nav.html') %></nav>
      <!--Big header to draw attention-->
      <header>
        <h1><%= Title %></h1>
      </header>
      <!--Project Thumbnails-->
      <p style="float: right" id="date"><%= Time %></p>
    </div>
    <div id="Like">
      <% if (Liked == true) { %>
      <a
        onclick="like(ArticleLikeTimeArray)"
        style="
          font-size: 2rem;
          color: var(--text-color);
          text-decoration: none;
          cursor: pointer;
        "
        id="likeBtn"
        >♥</a
      >
      <p id="likeBtnCount"><%= Likes %></p>
      <% } else { %>
      <a
        onclick="like(ArticleLikeTimeArray)"
        style="
          font-size: 2rem;
          color: var(--text-color);
          text-decoration: none;
          cursor: pointer;
        "
        id="likeBtn"
        >♡</a
      >
      <p id="likeBtnCount"><%= Likes %></p>
      <% } %>
    </div>

    <div class="borders">
      <h3><%= Appetizer %></h3>
      <p id="content-text"><%- Content %></p>
    </div>
    <div class="borders" id="WriteComment">
      <h3 id="commentMessage">Write a comment:</h3>
      <form class="comment">
        <textarea
          style="width: 45vw"
          id="comment"
          placeholder="Comment"
          oninput="CommentCharCount()"
        ></textarea>
        <p id="CommentChar">0/400</p>
        <button
          style="float: none"
          class="clearBtn"
          id="SubmitComment"
          type="button"
          onclick="addComment()"
        >
          Add Comment
        </button>
        <p id="response"></p>
      </form>
    </div>
    <div id="comments" class="borders">
      <h3 id="commentTitle">Comments</h3>
      <!--Use ejs to render the comments the same as the javascript would-->
      <div id="commentList">
        <% for (var i = 0; i < Comments.length; i++) { %> <% if
        (Comments[i].Deleted == false) { %>
        <img
          class="CommentProfilePicture"
          src="/api/avatar/<%= Comments[i].ProfilePicture %>"
          alt="Profile Picture"
          style="float: left"
        />
        <p style="float: right"><%= Comments[i].Time %></p>
        <h4 style="float: left"><%- Comments[i].Username %></h4>
        <br />
        <p style="float: right"></p>
        <p style="word-wrap: break-word; max-width: 80%">
          <%= Comments[i].Content %>
        </p>
        <% if (Comments[i].ID == UserID || SudoUser == true) { %>
        <button
          class="clearBtn"
          onclick="DeleteComment('<%= Comments[i].Unique_id %>')"
        >
          Delete
        </button>
        <% } %>
        <div id="Like">
          <% if (Comments[i].Liked == true) { %>
          <a
            class="CommentLikeBtn"
            onclick="LikeComment('<%= Comments[i].Unique_id %>')"
            style="
              font-size: 2rem;
              color: var(--text-color);
              text-decoration: none;
              cursor: pointer;
            "
            id="<%- Comments[i].Unique_id %>"
            >♥</a
          >
          <p id="<%- Comments[i].Unique_id %>Count"><%= Comments[i].Likes %></p>
          <% } else { %>
          <a
            class="CommentLikeBtn"
            onclick="LikeComment('<%= Comments[i].Unique_id %>')"
            style="
              font-size: 2rem;
              color: var(--text-color);
              text-decoration: none;
              cursor: pointer;
            "
            id="<%- Comments[i].Unique_id %>"
            >♡</a
          >
          <p id="<%- Comments[i].Unique_id %>Count"><%= Comments[i].Likes %></p>
          <% } %>
        </div>
        <hr />
        <% } %> <% } %>
      </div>
    </div>
    <% if (SudoUser == true) { %>
    <div class="borders">
      <h3>Deleted Comments</h3>
      <div id="commentList">
        <% for (var i = 0; i < Comments.length; i++) { %> <% if
        (Comments[i].Deleted == true) { %>
        <img
          class="CommentProfilePicture"
          src="/api/avatar/<%= Comments[i].ProfilePicture %>"
          alt="Profile Picture"
          style="float: left"
        />
        <p style="float: right"><%= Comments[i].Time %></p>
        <h4 style="float: left"><%- Comments[i].Username %></h4>
        <br />
        <p style="float: right"></p>
        <p style="word-wrap: break-word; max-width: 80%">
          <%= Comments[i].Content %>
        </p>
        <button
          class="clearBtn"
          onclick="RestoreComment('<%= Comments[i].Unique_id %>')"
        >
          Restore
        </button>
        <div id="Like">
          <% if (Comments[i].Liked == true) { %>
          <a
            class="CommentLikeBtn"
            onclick="LikeComment('<%= Comments[i].Unique_id %>')"
            style="
              font-size: 2rem;
              color: var(--text-color);
              text-decoration: none;
              cursor: pointer;
            "
            id="<%- Comments[i].Unique_id %>"
            >♥</a
          >
          <p id="<%- Comments[i].Unique_id %>Count"><%= Comments[i].Likes %></p>
          <% } else { %>
          <a
            class="CommentLikeBtn"
            onclick="LikeComment('<%= Comments[i].Unique_id %>')"
            style="
              font-size: 2rem;
              color: var(--text-color);
              text-decoration: none;
              cursor: pointer;
            "
            id="<%- Comments[i].Unique_id %>"
            >♡</a
          >
          <p id="<%- Comments[i].Unique_id %>Count"><%= Comments[i].Likes %></p>
          <% } %>
        </div>
        <p style="float: right">Deleted At: <%= Comments[i].DeletedAt %></p>
        <br />
        <hr />
        <% } %> <% } %>
      </div>
      <% } %>
    </div>
    <footer id="footer"><%- include('Partials/footer.html') %></footer>
    <% if (SudoUser == true) { %>
    <script>
      function RestoreComment(CommentID) {
        fetch("/api/comments/restore/" + CommentID).then((response) => {
          if (response.status == 204) {
            location.reload();
          } else {
            alert("Error");
          }
        });
      }
    </script>
    <% } %>
    <script>
      function CommentCharCount() {
        var comment = document.getElementById("comment").value;
        var charCount = comment.length;
        document.getElementById("CommentChar").innerHTML = charCount + "/400";
        return charCount;
      }
      let Likes = document.getElementById("likeBtn").innerHTML;
      Likes = parseInt(Likes);
      ArticleLikeTimeArray = [];
      function ArticleRateLimit(ArticleLikeTimeArray) {
        var time = new Date().getTime();
        ArticleLikeTimeArray.push(time);
        var count = 0;
        for (var i = 0; i < ArticleLikeTimeArray.length; i++) {
          if (ArticleLikeTimeArray[i] > time - 10000) {
            count++;
          } else {
            ArticleLikeTimeArray.splice(i, 1);
          }
        }
        if (count > 5) {
          return false;
        } else {
          return true;
        }
      }
      function like(ArticleLikeTimeArray) {
        const RateLimit = ArticleRateLimit(ArticleLikeTimeArray);
        if (RateLimit == true) {
          Likes = document.getElementById("likeBtnCount").innerHTML;
          Likes = parseInt(Likes);
          //Send http request to the server
          var http = new XMLHttpRequest();
          var currentUrl = window.location.href;
          //extract path from the url
          var path = currentUrl.substring(currentUrl.lastIndexOf("/") + 1);
          http.open("GET", `/api/projects/${path}/like`, true);
          http.send();
          http.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
              let response = JSON.parse(this.responseText);
              if (response.Status == "Added") {
                //Add one to the like value
                Likes++;
                document.getElementById("likeBtn").innerHTML = "♥";
                document.getElementById("likeBtnCount").innerHTML = `${Likes}`;
              } else if (response.Status == "Removed") {
                //Remove one from the like value
                Likes--;
                document.getElementById("likeBtn").innerHTML = "♡";
                document.getElementById("likeBtnCount").innerHTML = `${Likes}`;
              }
            }
          };
        }
      }
      //Post comment to the server
      function addComment() {
        //Disable the normal submit
        if (CommentCharCount() > 400) {
          document.getElementById("response").innerHTML =
            "<b>Comment is too long!</b>";
          return;
        }
        var comment = document.getElementById("comment").value;
        //Clear all boxes
        document.getElementById("comment").value = "";
        //Send the comment to the server
        var http = new XMLHttpRequest();
        var currentUrl = window.location.href;
        //extract path from the url
        var path = currentUrl.substring(currentUrl.lastIndexOf("/") + 1);
        http.open("POST", `/api/projects/${path}/comment`, true);
        http.setRequestHeader(
          "Content-type",
          "application/x-www-form-urlencoded"
        );
        http.send(`comment=${comment}`);
        http.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
            response = JSON.parse(this.responseText);
            document.getElementById("response").innerHTML = response.message;
            setTimeout(function () {
              location.reload();
            }, 2500);
          }
        };
      }

      //Load comments
      CommentLikeTimeArray = [];
      function CommentLikeRateLimit(CommentLikeTimeArray) {
        let time = new Date().getTime();
        CommentLikeTimeArray.push(time);
        let count = 0;
        for (var i = 0; i < CommentLikeTimeArray.length; i++) {
          if (CommentLikeTimeArray[i] > time - 5000) {
            count++;
          } else {
            CommentLikeTimeArray.splice(i, 1);
          }
        }
        if (count > 10) {
          return false;
        } else {
          return true;
        }
      }
      function LikeComment(id) {
        let Limit = CommentLikeRateLimit(CommentLikeTimeArray);
        if (Limit == true) {
          //Send Http request
          var http = new XMLHttpRequest();
          http.open("GET", `/api/comments/${id}/like`, true);
          http.send();
          http.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
              let response = JSON.parse(this.responseText);
              document.getElementById(`${id}Count`).innerHTML = response.Status;
              LikeBtn = document.getElementById(id);
              if (response.Action == "Added") {
                LikeBtn.innerHTML = "♥";
              } else if (response.Action == "Removed") {
                LikeBtn.innerHTML = "♡";
              }
            }
          };
        }
      }
      function DeleteComment(id) {
        fetch(`/api/comments/delete/${id}`, {
          method: "GET",
        })
          .then((response) => {
            if (response.status == 204) {
              location.reload();
            }
          })
          .catch((error) => {
            console.log(error);
          });
      }
      function OpenMenu() {
        //Get the ul that is a direct child of the nav
        var element = document.querySelector("#MenuItems");
        if (element.className == "hidden") {
          element.className = "";
        } else {
          element.className = "hidden";
        }
      }
    </script>
  </body>
</html>
