<!DOCTYPE html>
<html lang="en">
  <head>
    <script
      src="https://challenges.cloudflare.com/turnstile/v0/api.js"
      async
      defer
    ></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&display=swap"
      rel="stylesheet"
    />
    <script src="/login.js"></script>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= Title %></title>
    <!--Meta Tags-->
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:domain" content="tomblake.me" />
    <meta
      name="twitter:title"
      property="og:title"
      itemprop="name"
      content="Read the full article on https://tomblake.me/articles"
    />
    <meta
      name="twitter:description"
      property="og:description"
      itemprop="description"
      content="Read the full article on https://tomblake.me/articles"
    />
    <link rel="stylesheet" href="../../../css.css" />
  </head>
  <body>
    <div id="LoadingScreen">
      <div class="center" id="dots"></div>
      <p class="center" id="loadingText">Loading epic content</p>
    </div>
    <div id="content">
      <nav>
        <a href="/login" class="listLink" style="font-size: 1rem" id="loginInfo"
          >Not logged in</a
        >
        <ul>
          <li><a class="listLink" href="/">Home</a></li>
          <li><a class="listLink" href="/projects">Articles</a></li>
        </ul>
      </nav>
      <!--Big header to draw attention-->
      <header>
        <h1><%= Title %></h1>
      </header>
      <!--Project Thumbnails-->
      <button onclick="like(ArticleLikeTimeArray)" id="likeBtn" class="likeBtn">
        Likes: <%= Likes %>
      </button>
      <p id="likeMessage"></p>
      <div id="projects">
        <div class="borders">
          <p style="float: right" id="date"><%= Time %></p>
          <h3><%= Appetizer %></h3>
          <!--Allow there to be html tags put in the content text-->
          <p id="content-text"><%- Content %></p>
        </div>
      </div>
      <div class="borders" id="WriteComment">
        <h3 id="commentMessage">Write a comment:</h3>
        <form class="comment">
          <textarea
            style="width: 45vw"
            id="comment"
            placeholder="Comment*"
            oninput="CommentCharCount()"
          ></textarea>
          <p id="CommentChar">0/400</p>
          <button type="button" onclick="addComment()">Add Comment</button>
        </form>
        <p id="response"></p>
      </div>
      <div id="comments" class="borders">
        <h3 id="commentTitle">Comments</h3>
        <!--Use ejs to render the comments the same as the javascript would-->
        <div id="commentList">
          <% for (var i = 0; i < Comments.length; i++) { %>
          <div class="borders">
            <img
              class="CommentProfilePicture"
              src="/api/avatar/<%= Comments[i].ProfilePicture %>"
              alt="Profile Picture"
              style="float: left"
            />
            <p style="float: right"><%= Comments[i].Time %></p>
            <h4 style="float: left"><%= Comments[i].Username %></h4>
            <br />
            <p style="float: right"></p>
            <p style="word-wrap: break-word; max-width: 80%">
              <%= Comments[i].Content %>
            </p>
            <button
              id="<%= Comments[i].Unique_id %>"
              onclick="LikeComment('<%= Comments[i].Unique_id %>')"
            >
              Likes: <%= Comments[i].Likes %>
            </button>
          </div>
          <% } %>
        </div>
      </div>
      <div id="footer">
        <h3>Footer</h3>
        <!--Links-->
        <ul class="linkBar">
          <li>
            <a
              target="_blank"
              href="https://github.com/tommacode"
              class="listLink"
              >My Github</a
            >
          </li>
          <li>
            <a
              target="_blank"
              href="https://tomhasawebsite.com"
              class="listLink"
              >Other Website</a
            >
          </li>
          <li><a href="#" class="listLink">Back to the top!</a></li>
        </ul>
      </div>
    </div>
    <script>
      function CommentCharCount() {
        var comment = document.getElementById("comment").value;
        var charCount = comment.length;
        document.getElementById("CommentChar").innerHTML = charCount + "/400";
        return charCount;
      }
      //Wait until the content is loaded
      function HideLoadingScreen() {
        document.getElementById("content").style.display = "block";
        document.getElementById("LoadingScreen").style.display = "none";
      }
      let Likes = document.getElementById("likeBtn").innerHTML;
      Likes = Likes.replace("Likes: ", "");
      Likes = parseInt(Likes);
      HideLoadingScreen();
      ArticleLikeTimeArray = [];
      function ArticleRateLimit(ArticleLikeTimeArray) {
        var time = new Date().getTime();
        ArticleLikeTimeArray.push(time);
        var count = 0;
        for (var i = 0; i < ArticleLikeTimeArray.length; i++) {
          if (ArticleLikeTimeArray[i] > time - 10000) {
            count++;
          } else {
            ArticleLikeTimeArray.splice(i, 1);
          }
        }
        if (count > 5) {
          return false;
        } else {
          return true;
        }
      }
      function like(ArticleLikeTimeArray) {
        const RateLimit = ArticleRateLimit(ArticleLikeTimeArray);
        if (RateLimit == true) {
          //Send http request to the server
          var http = new XMLHttpRequest();
          var currentUrl = window.location.href;
          //extract path from the url
          var path = currentUrl.substring(currentUrl.lastIndexOf("/") + 1);
          http.open("GET", `/api/projects/${path}/like`, true);
          http.send();
          http.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
              let response = JSON.parse(this.responseText);
              if (response.Status == "Added") {
                //Add one to the like value
                Likes++;
                document.getElementById(
                  "likeBtn"
                ).innerHTML = `Likes: ${Likes}`;
              } else if (response.Status == "Removed") {
                //Remove one from the like value
                Likes--;
                document.getElementById(
                  "likeBtn"
                ).innerHTML = `Likes: ${Likes}`;
              }
            }
          };
        }
      }
      //Post comment to the server
      function addComment() {
        //Disable the normal submit
        if (CommentCharCount() > 400) {
          document.getElementById("response").innerHTML =
            "<b>Comment is too long!</b>";
          return;
        }
        var comment = document.getElementById("comment").value;
        //Clear all boxes
        document.getElementById("comment").value = "";
        //Send the comment to the server
        var http = new XMLHttpRequest();
        var currentUrl = window.location.href;
        //extract path from the url
        var path = currentUrl.substring(currentUrl.lastIndexOf("/") + 1);
        http.open("POST", `/api/projects/${path}/comment`, true);
        http.setRequestHeader(
          "Content-type",
          "application/x-www-form-urlencoded"
        );
        http.send(`comment=${comment}`);
        http.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 204) {
            document.getElementById("response").innerHTML =
              "<b>Comment Posted!</b>";
          }
          if (this.readyState == 4 && this.status == 400) {
            document.getElementById("response").innerHTML =
              "<b>Error posting comment</b>";
          }
          if (this.readyState == 4 && this.status == 429) {
            document.getElementById("response").innerHTML =
              "<b>You have posted too many comments</b>";
          }
          if (this.readyState == 4 && this.status == 403) {
            document.getElementById("response").innerHTML =
              "<b>Failed Bot verification</b>";
          }
          //Wait and then clear the response
          setTimeout(function () {
            if (
              document.getElementById("response").innerHTML ==
              "<b>Comment Posted!</b>"
            ) {
              location.reload();
            }
            document.getElementById("response").innerHTML = "";
          }, 2000);
        };
      }

      //Load comments
      CommentLikeTimeArray = [];
      function CommentLikeRateLimit(CommentLikeTimeArray) {
        let time = new Date().getTime();
        CommentLikeTimeArray.push(time);
        let count = 0;
        for (var i = 0; i < CommentLikeTimeArray.length; i++) {
          if (CommentLikeTimeArray[i] > time - 5000) {
            count++;
          } else {
            CommentLikeTimeArray.splice(i, 1);
          }
        }
        if (count > 10) {
          return false;
        } else {
          return true;
        }
      }
      function LikeComment(id) {
        let Limit = CommentLikeRateLimit(CommentLikeTimeArray);
        if (Limit == true) {
          //Send Http request
          var http = new XMLHttpRequest();
          http.open("GET", `/api/comments/${id}/like`, true);
          http.send();
          http.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
              let response = JSON.parse(this.responseText);
              document.getElementById(id).innerHTML =
                "Likes: " + response.Status;
            }
          };
        }
      }
    </script>
  </body>
</html>
